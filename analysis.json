{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "# Anypoint styled version of the `paper-dropdown-menu` element.\n\nTo be used with the API Console that must be styled for the platform.\n\nThis is a faster, lighter version of `paper-dropdown-menu`, that does not\nuse a `<paper-input>` internally. Use this element if you're concerned about\nthe performance of this element, i.e., if you plan on using many dropdowns on\nthe same page. Note that this element has a slightly different styling API\nthan `paper-dropdown-menu`.\n`paper-dropdown-menu` is similar to a native browser select element.\n`paper-dropdown-menu` works with selectable content. The currently selected\nitem is displayed in the control. If no item is selected, the `label` is\ndisplayed instead.\n\nExample:\n\n     <paper-dropdown-menu-light label=\"Your favourite pastry\">\n       <paper-listbox class=\"dropdown-content\">\n         <paper-item>Croissant</paper-item>\n         <paper-item>Donut</paper-item>\n         <paper-item>Financier</paper-item>\n         <paper-item>Madeleine</paper-item>\n       </paper-listbox>\n     </paper-dropdown-menu-light>\n\nThis example renders a dropdown menu with 4 options.\nThe child element with the class `dropdown-content` is used as the dropdown\nmenu. This can be a [`paper-listbox`](paper-listbox), or any other or\nelement that acts like an [`iron-selector`](iron-selector).\nSpecifically, the menu child must fire an\n[`iron-select`](iron-selector#event-iron-select) event when one of its\nchildren is selected, and an [`iron-deselect`](iron-selector#event-iron-deselect)\nevent when a child is deselected. The selected or deselected item must\nbe passed as the event's `detail.item` property.\nApplications can listen for the `iron-select` and `iron-deselect` events\nto react when options are selected and deselected.\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dropdown-menu` | A mixin that is applied to the element host | `{}`\n`--paper-dropdown-menu-disabled` | A mixin that is applied to the element host when disabled | `{}`\n`--paper-dropdown-menu-disabled-opacity` | The opacity of the dropdown when disabled  | `0.33`\n`--paper-dropdown-menu-button` | A mixin that is applied to the internal menu button | `{}`\n`--paper-dropdown-menu-icon` | A mixin that is applied to the internal icon | `{}`\n`--paper-dropdown-menu-color` | The color of the input/label/underline when the dropdown is unfocused | `--primary-text-color`\n`--paper-dropdown-menu-focus-color` | The color of the label/underline when the dropdown is focused  | `--primary-color`\n`--paper-dropdown-error-color` | The color of the label/underline when the dropdown is invalid  | `--error-color`\n`--paper-dropdown-menu-label` | Mixin applied to the label | `{}`\n`--paper-dropdown-menu-input` | Mixin appled to the input | `{}`\n`--paper-dropdown-menu-border-color` | Color of the border of the dropdown when opened | `var(--anypoint-color-aluminum4)`\n`--paper-dropdown-menu-label-opened-color` | Color of the label when opened | `rgba(0, 0, 0, 0.24)`",
      "summary": "",
      "path": "paper-dropdown-menu-light.html",
      "properties": [
        {
          "name": "keyEventTarget",
          "type": "?EventTarget",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stopKeyboardEventPropagation",
          "type": "boolean",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_boundKeyHandlers",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 294,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_imperativeKeyBindings",
          "type": "Object",
          "description": "own properties of everything on the \"prototype\".",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 303,
              "column": 8
            },
            "end": {
              "line": 308,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyBindings",
          "type": "!Object",
          "description": "To be used to express what combination of keys  will trigger the relative\ncallback. e.g. `keyBindings: { 'esc': '_onEscPressed'}`",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 321,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "pressed",
          "type": "boolean",
          "description": "If true, the user is currently holding down the button.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 27,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_pressedChanged\"",
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "toggles",
          "type": "boolean",
          "description": "If true, the button toggles the active state with each tap or press\nof the spacebar.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "If true, the button is a toggle and is currently in the active state.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "pointerDown",
          "type": "boolean",
          "description": "True if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "receivedFocusFromKeyboard",
          "type": "boolean",
          "description": "True if the input device that caused the element to receive focus\nwas a keyboard.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "ariaActiveAttribute",
          "type": "string",
          "description": "The aria attribute to be set if the button is a toggle and in the\nactive state.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_ariaActiveAttributeChanged\""
            }
          },
          "defaultValue": "\"aria-pressed\"",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_mouseEventRe",
          "type": "object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "focused",
          "type": "boolean",
          "description": "If true, the element currently has focus.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If true, the user cannot interact with this element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_disabledChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_oldTabIndex",
          "type": "(?string | undefined)",
          "description": "Value of the `tabindex` attribute before `disabled` was activated.\n`null` means the attribute was not present.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_boundFocusBlurHandler",
          "type": "Function",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "__handleEventRetargeting",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "validator",
          "type": "string",
          "description": "Name of the validator to use.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "True if the last call to `validate` is invalid.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_invalidChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "selectedItemLabel",
          "type": "string",
          "description": "The derived \"label\" of the currently selected item. This value\nis the `label` property on the selected item if set, or else the\ntrimmed text content of the selected item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 8
            },
            "end": {
              "line": 300,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "selectedItem",
          "type": "?Object",
          "description": "The last selected item. An item is selected if the dropdown menu has\na child with class `dropdown-content`, and that child triggers an\n`iron-select` event with the selected `item` in the `detail`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 8
            },
            "end": {
              "line": 313,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_selectedItemChanged\"",
              "readOnly": true
            }
          }
        },
        {
          "name": "value",
          "type": "string",
          "description": "The value for this element that will be used when submitting in\na form. It is read only, and will always have the same value\nas `selectedItemLabel`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 8
            },
            "end": {
              "line": 323,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          }
        },
        {
          "name": "label",
          "type": "string",
          "description": "The label for the dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 8
            },
            "end": {
              "line": 329,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "The placeholder for the dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 8
            },
            "end": {
              "line": 335,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "True if the dropdown is open. Otherwise, false.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 8
            },
            "end": {
              "line": 345,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_openedChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "allowOutsideScroll",
          "type": "boolean",
          "description": "By default, the dropdown will constrain scrolling on the page\nto itself when opened.\nSet to true in order to prevent scroll from being constrained\nto the dropdown when it opens.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 8
            },
            "end": {
              "line": 355,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 8
            },
            "end": {
              "line": 363,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"right\""
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 8
            },
            "end": {
              "line": 372,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "hasContent",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 8
            },
            "end": {
              "line": 376,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 8
            },
            "end": {
              "line": 383,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "registered",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 325,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 327,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 331,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "addOwnKeyBinding",
          "description": "Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString",
              "type": "string"
            },
            {
              "name": "handlerName",
              "type": "string"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "removeOwnKeyBindings",
          "description": "When called, will remove all imperatively-added key bindings.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 356,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyboardEventMatchesKeys",
          "description": "Returns true if a keyboard event matches `eventString`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 365,
              "column": 6
            },
            "end": {
              "line": 373,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "KeyboardEvent"
            },
            {
              "name": "eventString",
              "type": "string"
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_collectKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 375,
              "column": 6
            },
            "end": {
              "line": 385,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_prepKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 387,
              "column": 6
            },
            "end": {
              "line": 408,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_addKeyBinding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 410,
              "column": 6
            },
            "end": {
              "line": 420,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString"
            },
            {
              "name": "handlerName"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_resetKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 422,
              "column": 6
            },
            "end": {
              "line": 428,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_listenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 430,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_unlistenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 459,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_onKeyBindingEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 461,
              "column": 6
            },
            "end": {
              "line": 482,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyBindings"
            },
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_triggerKeyHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 484,
              "column": 6
            },
            "end": {
              "line": 495,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCombo"
            },
            {
              "name": "handlerName"
            },
            {
              "name": "keyboardEvent"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_tapHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_focusChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focused"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_detectKeyboardFocus",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focused"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_userActivate",
          "description": "'change' events",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_downHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_upHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 144,
              "column": 4
            },
            "end": {
              "line": 147,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_spaceKeyDownHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!KeyboardEvent",
              "description": "."
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_spaceKeyUpHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 182,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!KeyboardEvent",
              "description": "."
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_asyncClick",
          "description": "event handler to unwind before triggering another event",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 186,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_pressedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 194,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pressed"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_ariaActiveAttributeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 202,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_activeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 204,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            },
            {
              "name": "ariaActiveAttribute"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_controlStateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_changedButtonState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_focusBlurHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_disabledChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "disabled"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_changedControlState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_invalidChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_validator",
          "description": "Recompute this every time it's needed, because we don't know if the\nunderlying IronValidatableBehaviorMeta has changed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "hasValidator",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "True if the validator `validator` exists."
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "validate",
          "description": "Returns true if the `value` is valid, and updates `invalid`. If you want\nyour element to have custom validation logic, do not override this method;\noverride `_getValidity(value)` instead.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "Deprecated: The value to be validated. By default,\nit is passed to the validator's `validate()` function, if a validator is set.\nIf this argument is not specified, then the element's `value` property\nis used, if it exists."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if `value` is valid."
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_getValidity",
          "description": "Returns false if the element is required and does not have a selection,\nand true otherwise.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 507,
              "column": 4
            },
            "end": {
              "line": 509,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "true if `required` is false, or if `required` is true\nand the element has a valid selection."
          }
        },
        {
          "name": "connectedCallback",
          "description": "Ensures attributes and registers listeners.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 401,
              "column": 4
            },
            "end": {
              "line": 426,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "Removes listeners",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 4
            },
            "end": {
              "line": 433,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_clickHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 447,
              "column": 4
            },
            "end": {
              "line": 451,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "open",
          "description": "Show the dropdown content.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 456,
              "column": 4
            },
            "end": {
              "line": 458,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "close",
          "description": "Hide the dropdown content.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 462,
              "column": 4
            },
            "end": {
              "line": 464,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onIronSelect",
          "description": "A handler that is called when `iron-select` is fired.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 470,
              "column": 4
            },
            "end": {
              "line": 472,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent",
              "description": "An `iron-select` event."
            }
          ]
        },
        {
          "name": "_onIronDeselect",
          "description": "A handler that is called when `iron-deselect` is fired.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 4
            },
            "end": {
              "line": 481,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_selectedItemChanged",
          "description": "Compute the label for the dropdown given a selected item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 489,
              "column": 4
            },
            "end": {
              "line": 499,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItem",
              "type": "Element",
              "description": "A selected Element item, with an\noptional `label` property."
            }
          ]
        },
        {
          "name": "_openedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 511,
              "column": 4
            },
            "end": {
              "line": 525,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeLabelClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 527,
              "column": 4
            },
            "end": {
              "line": 529,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasContent"
            },
            {
              "name": "opened"
            }
          ]
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 531,
              "column": 4
            },
            "end": {
              "line": 537,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 281,
          "column": 2
        },
        "end": {
          "line": 538,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "AnypointElements.PaperDropdownMenuLight",
      "attributes": [
        {
          "name": "key-event-target",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {},
          "type": "?EventTarget",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stop-keyboard-event-propagation",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "pressed",
          "description": "If true, the user is currently holding down the button.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 27,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "toggles",
          "description": "If true, the button toggles the active state with each tap or press\nof the spacebar.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "active",
          "description": "If true, the button is a toggle and is currently in the active state.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "pointer-down",
          "description": "True if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "received-focus-from-keyboard",
          "description": "True if the input device that caused the element to receive focus\nwas a keyboard.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "aria-active-attribute",
          "description": "The aria attribute to be set if the button is a toggle and in the\nactive state.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "focused",
          "description": "If true, the element currently has focus.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "disabled",
          "description": "If true, the user cannot interact with this element.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "validator",
          "description": "Name of the validator to use.",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "invalid",
          "description": "True if the last call to `validate` is invalid.",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "selected-item-label",
          "description": "The derived \"label\" of the currently selected item. This value\nis the `label` property on the selected item if set, or else the\ntrimmed text content of the selected item.",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 8
            },
            "end": {
              "line": 300,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "selected-item",
          "description": "The last selected item. An item is selected if the dropdown menu has\na child with class `dropdown-content`, and that child triggers an\n`iron-select` event with the selected `item` in the `detail`.",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 8
            },
            "end": {
              "line": 313,
              "column": 9
            }
          },
          "metadata": {},
          "type": "?Object"
        },
        {
          "name": "value",
          "description": "The value for this element that will be used when submitting in\na form. It is read only, and will always have the same value\nas `selectedItemLabel`.",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 8
            },
            "end": {
              "line": 323,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label for the dropdown.",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 8
            },
            "end": {
              "line": 329,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "placeholder",
          "description": "The placeholder for the dropdown.",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 8
            },
            "end": {
              "line": 335,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "opened",
          "description": "True if the dropdown is open. Otherwise, false.",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 8
            },
            "end": {
              "line": 345,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "allow-outside-scroll",
          "description": "By default, the dropdown will constrain scrolling on the page\nto itself when opened.\nSet to true in order to prevent scroll from being constrained\nto the dropdown when it opens.",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 8
            },
            "end": {
              "line": 355,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 8
            },
            "end": {
              "line": 363,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 8
            },
            "end": {
              "line": 372,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "has-content",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 8
            },
            "end": {
              "line": 376,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "dynamic-align",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 8
            },
            "end": {
              "line": 383,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "active-changed",
          "description": "Fired when the `active` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "type": "CustomEvent",
          "name": "focused-changed",
          "description": "Fired when the `focused` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "type": "CustomEvent",
          "name": "disabled-changed",
          "description": "Fired when the `disabled` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "type": "CustomEvent",
          "name": "invalid-changed",
          "description": "Fired when the `invalid` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-label-changed",
          "description": "Fired when the `selectedItemLabel` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "paper-dropdown-menu-light",
      "mixins": [
        "Polymer.IronButtonState",
        "Polymer.IronControlState",
        "Polymer.IronValidatableBehavior",
        "Polymer.IronA11yKeysBehavior"
      ]
    },
    {
      "description": "# Anypoint styled version of the `paper-dropdown-menu` element.\n\nTo be used with the API Console that must be styled for the platform.\n\nThis is a faster, lighter version of `paper-dropdown-menu`, that does not\nuse a `<paper-input>` internally. Use this element if you're concerned about\nthe performance of this element, i.e., if you plan on using many dropdowns on\nthe same page. Note that this element has a slightly different styling API\nthan `paper-dropdown-menu`.\n`paper-dropdown-menu` is similar to a native browser select element.\n`paper-dropdown-menu` works with selectable content. The currently selected\nitem is displayed in the control. If no item is selected, the `label` is\ndisplayed instead.\n\nExample:\n\n     <paper-dropdown-menu-light label=\"Your favourite pastry\">\n       <paper-listbox class=\"dropdown-content\">\n         <paper-item>Croissant</paper-item>\n         <paper-item>Donut</paper-item>\n         <paper-item>Financier</paper-item>\n         <paper-item>Madeleine</paper-item>\n       </paper-listbox>\n     </paper-dropdown-menu-light>\n\nThis example renders a dropdown menu with 4 options.\nThe child element with the class `dropdown-content` is used as the dropdown\nmenu. This can be a [`paper-listbox`](paper-listbox), or any other or\nelement that acts like an [`iron-selector`](iron-selector).\nSpecifically, the menu child must fire an\n[`iron-select`](iron-selector#event-iron-select) event when one of its\nchildren is selected, and an [`iron-deselect`](iron-selector#event-iron-deselect)\nevent when a child is deselected. The selected or deselected item must\nbe passed as the event's `detail.item` property.\nApplications can listen for the `iron-select` and `iron-deselect` events\nto react when options are selected and deselected.\n\n### Styling\n\nThe following custom properties and mixins are also available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dropdown-menu` | A mixin that is applied to the element host | `{}`\n`--paper-dropdown-menu-disabled` | A mixin that is applied to the element host when disabled | `{}`\n`--paper-dropdown-menu-disabled-opacity` | The opacity of the dropdown when disabled  | `0.33`\n`--paper-dropdown-menu-button` | A mixin that is applied to the internal menu button | `{}`\n`--paper-dropdown-menu-icon` | A mixin that is applied to the internal icon | `{}`\n`--paper-dropdown-menu-color` | The color of the input/label/underline when the dropdown is unfocused | `--primary-text-color`\n`--paper-dropdown-menu-focus-color` | The color of the label/underline when the dropdown is focused  | `--primary-color`\n`--paper-dropdown-error-color` | The color of the label/underline when the dropdown is invalid  | `--error-color`\n`--paper-dropdown-menu-label` | Mixin applied to the label | `{}`\n`--paper-dropdown-menu-input` | Mixin appled to the input | `{}`\n`--paper-dropdown-menu-border-color` | Color of the border of the dropdown when opened | `var(--anypoint-color-aluminum4)`\n`--paper-dropdown-menu-label-opened-color` | Color of the label when opened | `rgba(0, 0, 0, 0.24)`",
      "summary": "",
      "path": "paper-dropdown-menu.html",
      "properties": [
        {
          "name": "keyEventTarget",
          "type": "?EventTarget",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stopKeyboardEventPropagation",
          "type": "boolean",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_boundKeyHandlers",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 294,
              "column": 8
            },
            "end": {
              "line": 299,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_imperativeKeyBindings",
          "type": "Object",
          "description": "own properties of everything on the \"prototype\".",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 303,
              "column": 8
            },
            "end": {
              "line": 308,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyBindings",
          "type": "!Object",
          "description": "To be used to express what combination of keys  will trigger the relative\ncallback. e.g. `keyBindings: { 'esc': '_onEscPressed'}`",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 321,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "pressed",
          "type": "boolean",
          "description": "If true, the user is currently holding down the button.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 27,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_pressedChanged\"",
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "toggles",
          "type": "boolean",
          "description": "If true, the button toggles the active state with each tap or press\nof the spacebar.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "If true, the button is a toggle and is currently in the active state.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "pointerDown",
          "type": "boolean",
          "description": "True if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "receivedFocusFromKeyboard",
          "type": "boolean",
          "description": "True if the input device that caused the element to receive focus\nwas a keyboard.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "ariaActiveAttribute",
          "type": "string",
          "description": "The aria attribute to be set if the button is a toggle and in the\nactive state.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_ariaActiveAttributeChanged\""
            }
          },
          "defaultValue": "\"aria-pressed\"",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_mouseEventRe",
          "type": "object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "focused",
          "type": "boolean",
          "description": "If true, the element currently has focus.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If true, the user cannot interact with this element.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_disabledChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_oldTabIndex",
          "type": "(?string | undefined)",
          "description": "Value of the `tabindex` attribute before `disabled` was activated.\n`null` means the attribute was not present.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_boundFocusBlurHandler",
          "type": "Function",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "__handleEventRetargeting",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "validator",
          "type": "string",
          "description": "Name of the validator to use.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "invalid",
          "type": "boolean",
          "description": "True if the last call to `validate` is invalid.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_invalidChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "selectedItemLabel",
          "type": "string",
          "description": "The derived \"label\" of the currently selected item. This value\nis the `label` property on the selected item if set, or else the\ntrimmed text content of the selected item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 8
            },
            "end": {
              "line": 300,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "selectedItem",
          "type": "?Object",
          "description": "The last selected item. An item is selected if the dropdown menu has\na child with class `dropdown-content`, and that child triggers an\n`iron-select` event with the selected `item` in the `detail`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 8
            },
            "end": {
              "line": 313,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_selectedItemChanged\"",
              "readOnly": true
            }
          }
        },
        {
          "name": "value",
          "type": "string",
          "description": "The value for this element that will be used when submitting in\na form. It is read only, and will always have the same value\nas `selectedItemLabel`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 8
            },
            "end": {
              "line": 323,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          }
        },
        {
          "name": "label",
          "type": "string",
          "description": "The label for the dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 8
            },
            "end": {
              "line": 329,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "The placeholder for the dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 8
            },
            "end": {
              "line": 335,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "True if the dropdown is open. Otherwise, false.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 8
            },
            "end": {
              "line": 345,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_openedChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "allowOutsideScroll",
          "type": "boolean",
          "description": "By default, the dropdown will constrain scrolling on the page\nto itself when opened.\nSet to true in order to prevent scroll from being constrained\nto the dropdown when it opens.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 8
            },
            "end": {
              "line": 355,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 8
            },
            "end": {
              "line": 363,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"right\""
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 8
            },
            "end": {
              "line": 372,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "hasContent",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 8
            },
            "end": {
              "line": 376,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 8
            },
            "end": {
              "line": 383,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "registered",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 325,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 327,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 331,
              "column": 6
            },
            "end": {
              "line": 333,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "addOwnKeyBinding",
          "description": "Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString",
              "type": "string"
            },
            {
              "name": "handlerName",
              "type": "string"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "removeOwnKeyBindings",
          "description": "When called, will remove all imperatively-added key bindings.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 356,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "keyboardEventMatchesKeys",
          "description": "Returns true if a keyboard event matches `eventString`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 365,
              "column": 6
            },
            "end": {
              "line": 373,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "KeyboardEvent"
            },
            {
              "name": "eventString",
              "type": "string"
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_collectKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 375,
              "column": 6
            },
            "end": {
              "line": 385,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_prepKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 387,
              "column": 6
            },
            "end": {
              "line": 408,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_addKeyBinding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 410,
              "column": 6
            },
            "end": {
              "line": 420,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString"
            },
            {
              "name": "handlerName"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_resetKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 422,
              "column": 6
            },
            "end": {
              "line": 428,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_listenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 430,
              "column": 6
            },
            "end": {
              "line": 442,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_unlistenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 444,
              "column": 6
            },
            "end": {
              "line": 459,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_onKeyBindingEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 461,
              "column": 6
            },
            "end": {
              "line": 482,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyBindings"
            },
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_triggerKeyHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 484,
              "column": 6
            },
            "end": {
              "line": 495,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCombo"
            },
            {
              "name": "handlerName"
            },
            {
              "name": "keyboardEvent"
            }
          ],
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "_tapHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_focusChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focused"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_detectKeyboardFocus",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 125,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focused"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_userActivate",
          "description": "'change' events",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_downHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_upHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 144,
              "column": 4
            },
            "end": {
              "line": 147,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_spaceKeyDownHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!KeyboardEvent",
              "description": "."
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_spaceKeyUpHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 182,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!KeyboardEvent",
              "description": "."
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_asyncClick",
          "description": "event handler to unwind before triggering another event",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 186,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_pressedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 194,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pressed"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_ariaActiveAttributeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 202,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_activeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 204,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            },
            {
              "name": "ariaActiveAttribute"
            }
          ],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_controlStateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 214,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_changedButtonState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_focusBlurHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_disabledChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 125,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "disabled"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_changedControlState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "_invalidChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_validator",
          "description": "Recompute this every time it's needed, because we don't know if the\nunderlying IronValidatableBehaviorMeta has changed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 82,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "hasValidator",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 87,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "True if the validator `validator` exists."
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "validate",
          "description": "Returns true if the `value` is valid, and updates `invalid`. If you want\nyour element to have custom validation logic, do not override this method;\noverride `_getValidity(value)` instead.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 102,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "Deprecated: The value to be validated. By default,\nit is passed to the validator's `validate()` function, if a validator is set.\nIf this argument is not specified, then the element's `value` property\nis used, if it exists."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if `value` is valid."
          },
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "_getValidity",
          "description": "Returns false if the element is required and does not have a selection,\nand true otherwise.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 507,
              "column": 4
            },
            "end": {
              "line": 509,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "true if `required` is false, or if `required` is true\nand the element has a valid selection."
          }
        },
        {
          "name": "connectedCallback",
          "description": "Ensures attributes and registers listeners.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 401,
              "column": 4
            },
            "end": {
              "line": 426,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "Removes listeners",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 4
            },
            "end": {
              "line": 433,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_clickHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 447,
              "column": 4
            },
            "end": {
              "line": 451,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "open",
          "description": "Show the dropdown content.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 456,
              "column": 4
            },
            "end": {
              "line": 458,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "close",
          "description": "Hide the dropdown content.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 462,
              "column": 4
            },
            "end": {
              "line": 464,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onIronSelect",
          "description": "A handler that is called when `iron-select` is fired.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 470,
              "column": 4
            },
            "end": {
              "line": 472,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent",
              "description": "An `iron-select` event."
            }
          ]
        },
        {
          "name": "_onIronDeselect",
          "description": "A handler that is called when `iron-deselect` is fired.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 4
            },
            "end": {
              "line": 481,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_selectedItemChanged",
          "description": "Compute the label for the dropdown given a selected item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 489,
              "column": 4
            },
            "end": {
              "line": 499,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItem",
              "type": "Element",
              "description": "A selected Element item, with an\noptional `label` property."
            }
          ]
        },
        {
          "name": "_openedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 511,
              "column": 4
            },
            "end": {
              "line": 525,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeLabelClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 527,
              "column": 4
            },
            "end": {
              "line": 529,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasContent"
            },
            {
              "name": "opened"
            }
          ]
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 531,
              "column": 4
            },
            "end": {
              "line": 537,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 281,
          "column": 2
        },
        "end": {
          "line": 538,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "AnypointElements.PaperDropdownMenu",
      "attributes": [
        {
          "name": "key-event-target",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {},
          "type": "?EventTarget",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "stop-keyboard-event-propagation",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "sourceRange": {
            "file": "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html",
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 292,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronA11yKeysBehavior"
        },
        {
          "name": "pressed",
          "description": "If true, the user is currently holding down the button.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 27,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "toggles",
          "description": "If true, the button toggles the active state with each tap or press\nof the spacebar.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 39,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "active",
          "description": "If true, the button is a toggle and is currently in the active state.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 48,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "pointer-down",
          "description": "True if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "received-focus-from-keyboard",
          "description": "True if the input device that caused the element to receive focus\nwas a keyboard.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "aria-active-attribute",
          "description": "The aria attribute to be set if the button is a toggle and in the\nactive state.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-button-state.html",
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "focused",
          "description": "If true, the element currently has focus.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 25,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "disabled",
          "description": "If true, the user cannot interact with this element.",
          "sourceRange": {
            "file": "bower_components/iron-behaviors/iron-control-state.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "name": "validator",
          "description": "Name of the validator to use.",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "invalid",
          "description": "True if the last call to `validate` is invalid.",
          "sourceRange": {
            "file": "bower_components/iron-validatable-behavior/iron-validatable-behavior.html",
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "name": "selected-item-label",
          "description": "The derived \"label\" of the currently selected item. This value\nis the `label` property on the selected item if set, or else the\ntrimmed text content of the selected item.",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 8
            },
            "end": {
              "line": 300,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "selected-item",
          "description": "The last selected item. An item is selected if the dropdown menu has\na child with class `dropdown-content`, and that child triggers an\n`iron-select` event with the selected `item` in the `detail`.",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 8
            },
            "end": {
              "line": 313,
              "column": 9
            }
          },
          "metadata": {},
          "type": "?Object"
        },
        {
          "name": "value",
          "description": "The value for this element that will be used when submitting in\na form. It is read only, and will always have the same value\nas `selectedItemLabel`.",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 8
            },
            "end": {
              "line": 323,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "label",
          "description": "The label for the dropdown.",
          "sourceRange": {
            "start": {
              "line": 327,
              "column": 8
            },
            "end": {
              "line": 329,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "placeholder",
          "description": "The placeholder for the dropdown.",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 8
            },
            "end": {
              "line": 335,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "opened",
          "description": "True if the dropdown is open. Otherwise, false.",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 8
            },
            "end": {
              "line": 345,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "allow-outside-scroll",
          "description": "By default, the dropdown will constrain scrolling on the page\nto itself when opened.\nSet to true in order to prevent scroll from being constrained\nto the dropdown when it opens.",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 8
            },
            "end": {
              "line": 355,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 8
            },
            "end": {
              "line": 363,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "sourceRange": {
            "start": {
              "line": 368,
              "column": 8
            },
            "end": {
              "line": 372,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "has-content",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 8
            },
            "end": {
              "line": 376,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "dynamic-align",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 8
            },
            "end": {
              "line": 383,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "active-changed",
          "description": "Fired when the `active` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "type": "CustomEvent",
          "name": "focused-changed",
          "description": "Fired when the `focused` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "type": "CustomEvent",
          "name": "disabled-changed",
          "description": "Fired when the `disabled` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronControlState"
        },
        {
          "type": "CustomEvent",
          "name": "invalid-changed",
          "description": "Fired when the `invalid` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronValidatableBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-label-changed",
          "description": "Fired when the `selectedItemLabel` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "dropdown-content",
          "range": {
            "file": "paper-dropdown-menu.html",
            "start": {
              "line": 211,
              "column": 6
            },
            "end": {
              "line": 211,
              "column": 67
            }
          }
        }
      ],
      "tagname": "paper-dropdown-menu",
      "mixins": [
        "Polymer.IronButtonState",
        "Polymer.IronControlState",
        "Polymer.IronValidatableBehavior",
        "Polymer.IronA11yKeysBehavior"
      ]
    }
  ]
}
